## Server port
#server.port=${SERVER_PORT}
#server.servlet.context-path=/api-v1/
#
## Database connection properties
#spring.datasource.url=jdbc:postgresql://${DATABASE_HOSTNAME}:${DATABASE_PORT}/${DATABASE_NAME}
#spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.password=${DATABASE_PASSWORD}
#
## JPA properties
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=none
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
## Dev Tool
#spring.devtools.restart.enabled=true
#spring.devtools.restart.additional-exclude=static/**
#spring.devtools.livereload.enabled=false
#
## Config mail
#spring.mail.host=${MAIL_HOST}
#spring.mail.port=${MAIL_PORT}
#spring.mail.username=${MAIL_USERNAME}
#spring.mail.password=${MAIL_PASSWORD}
#spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2
#
## Config domain client
#domain.client=${DOMAIN_CLIENT}
#
## Secret token
#token.secret=${SECRET_TOKEN}
#
## Config size file
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB
#
## Cấu hình đường dẫn cho Swagger UI
#springfox.documentation.swagger-ui.path=/custom-swagger-ui-path
#
## Cấu hình login oauth2
#app.domain.main=http://localhost:3000
#
### Google
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
##spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:3000/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.scope=email,profile
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub
#
##Facebook
#spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
#spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
#spring.security.oauth2.client.registration.facebook.scope=email,public_profile
#
##Linkedin
#spring.security.oauth2.client.registration.linkedin.client-id=${LINKEDIN_CLIENT_ID}
#spring.security.oauth2.client.registration.linkedin.client-secret=${LINKEDIN_CLIENT_SECRET}
#spring.security.oauth2.client.registration.linkedin.scope=r_emailaddress,r_liteprofile
#spring.security.oauth2.client.registration.linkedin.client-authentication-method= post
#spring.security.oauth2.client.registration.linkedin.redirect-uri=http://localhost:3000
#spring.security.oauth2.client.registration.linkedin.authorization-grant-type= authorization_code
#spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
#spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
#spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
#spring.security.oauth2.client.provider.linkedin.user-name-attribute= id
